// AUTOMATICALLY GENERATED. DO NOT EDIT!
{%- import "/macros.proto.j2" as macros %}
{%- import "/macros_typehandler.j2" as macros_typehandler %}

#pragma once

#include "{{ object.snake_case_name }}.h"

#include "object_detail.h"
{%- if database_options.enable_custom_base_type_handler %}
#include <{{ cpp_server_custom_base_type_handler_path }}>
{%- endif %}

#include <yt/yt/orm/server/access_control/access_control_manager.h>
#include <yt/yt/orm/server/master/bootstrap.h>
#include <yt/yt/orm/server/objects/public.h>
#include <yt/yt/orm/server/objects/type_handler.h>
#include <yt/yt/orm/server/objects/type_handler_detail.h>

#include <memory>

namespace {{ cpp_objects_namespace }} {

using NYT::NOrm::NServer::NObjects::TObjectTypeHandlerBase;

////////////////////////////////////////////////////////////////////////////////
{%- set base_type_handler = 'TObjectTypeHandlerBase' %}
{%- if database_options.enable_custom_base_type_handler %}
{%- set base_type_handler = cpp_server_plugins_namespace + '::TObjectTypeHandlerBase' %}

static_assert(std::is_base_of<TObjectTypeHandlerBase, {{ base_type_handler }}>());
{%- endif %}

{{ macros_typehandler.declare_type_handler_impl(object, base_type_handler, False) }}

////////////////////////////////////////////////////////////////////////////////

} // {{ cpp_objects_namespace }}
